# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Post @model
@auth(rules: [
  { allow: owner, ownerField: "owner", provider: userPools, operations: [read, create, delete] }
  { allow: private, provider: userPools, operations: [read] }
  { allow: public, operations: [read] }
])
{
  id: ID
  content: String!
  owner: String
    @index(
        name: "BySpecificOwner", 
        queryField: "listPostsBySpecificOwner",
        sortKeyFields: ["timestamp"] # sort posts-by-owner by time
    )
  timestamp: Int!
  type: String! # always should be `Post` - used in SortByTimestamp GSI
    @index(
        name: "SortByTimestamp"
        queryField: "listPostsSortedByTimestamp"
        sortKeyFields: ["timestamp"] # sort posts by time overall
    )
  likes: [Like] @hasMany(
    indexName: "LikesByPost",
    fields: ["id"]
  )
}

type Like @model 
@auth(rules: [
  { allow: owner, ownerField: "createdBy", provider: userPools, operations: [read, update] }
  { allow: private, provider: userPools, operations: [read, update] }
  { allow: public, operations: [read] }
])
{
  id: ID!
  like: Int!
  numberLikes: Int 
  liked: Boolean 
  likeUserId: String 
  likeUserHandle: String 
  createdAt: AWSDateTime 
  post: Post @belongsTo(fields: ["postID"])
  postID: ID @index(
    name: "likesByPost"
  )
}